version: "3.5"

networks:
  restyaboard:
  restyaboard-internal:

services:
  ingress:
    networks:
      - restyaboard

  restyaboard:
    environment:
      POSTGRES_DB: restyaboard
      POSTGRES_HOST: restyaboard-db
      POSTGRES_USER: admin
      TZ: $TZ
    image: restyaplatform/restyaboard:v0.6.7
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    deploy:
      labels:
        - traefik.frontend.rule=$RESTYABOARD_ROUTING_LABEL
        - traefik.frontend.priority=$RESTYABOARD_ROUTING_LABEL_PRIORITY
        - traefik.enable=true
        # You'll need to set applicaiton's port here.
        - traefik.port=SET_ME_PLEASE
        - traefik.tags=ingress 
        - traefik.docker.network=${STACK_NAME:-technocore}_restyaboard
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
      mode: global
      restart_policy:
        condition: any
      # Big services will need this modified or removed.
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    deploy:
      mode: global
      restart_policy:
        condition: any
    networks:
      - restyaboard
      - restyaboard-internal
    volumes:
      - restyaboard:/usr/share/nginx/html/media

  restyaboard-db:
    image: postgres:9-alpine
    environment:
      POSTGRES_DB: restyaboard
      POSTGRES_HOST: restyaboard-db
      POSTGRES_USER: admin
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    volumes:
    - restyaboard-db:/var/lib/postgresql/data
    networks:
      - restyaboard-internal
    volumes:
  restyaboard:
  restyaboard-db:
